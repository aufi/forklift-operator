---
apiVersion: v1
kind: Secret
metadata:
  name: webhook-server-secret
  namespace: {{ virt_namespace }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: controller-manager-service
  namespace: {{ virt_namespace }}
spec:
  ports:
  - port: 443
  selector:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: virt-controller
  namespace: {{ virt_namespace }}
data:
  WORKING_DIR: {{ inventory_volume_path }}
  CORS_ALLOWED_ORIGINS: {{ cors_origins | join(' ') }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: migration
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: virt-controller
  namespace: {{ virt_namespace }}
spec:
  selector:
    matchLabels:
      app: migration
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  serviceName: controller-manager-service
  template:
    metadata:
      labels:
        app: migration
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
      annotations:
        configHash: "{{ (inventory_volume_path | string)
        | join(cors_origins | string) }}"
    spec:
      serviceAccountName: virt-controller
      containers:
      - name: main
        command:
        - /usr/local/bin/manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ROLE
          value: main
        - name: MA_ROUTE
          value: {{ ma_route }}
        - name: SECRET_NAME
          value: webhook-server-secret
        envFrom:
        - configMapRef:
            name: virt-controller
        image: {{ virt_controller_image_fqin }}
        imagePullPolicy: {{ image_pull_policy }}
        ports:
        - containerPort: 9876
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: {{ virt_controller_limits_cpu }}
            memory: {{ virt_controller_limits_memory }}
          requests:
            cpu: {{ virt_controller_requests_cpu }}
            memory: {{ virt_controller_requests_memory }}
        volumeMounts:
        - mountPath: /tmp/cert
          name: cert
          readOnly: true
      - name: inventory
        command:
        - /usr/local/bin/manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ROLE
          value: inventory
        - name: SECRET_NAME
          value: webhook-server-secret
        - name: API_PORT
          value: "8443"
        - name: API_TLS_CERTIFICATE
          value: /var/run/secrets/inventory-tls/tls.crt
        - name: API_TLS_KEY
          value: /var/run/secrets/inventory-tls/tls.key
        envFrom:
        - configMapRef:
            name: virt-controller
        image: {{ virt_controller_image_fqin }}
        imagePullPolicy: {{ image_pull_policy }}
        ports:
        - name: api
          containerPort: 8443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: {{ virt_controller_limits_cpu }}
            memory: {{ virt_controller_limits_memory }}
          requests:
            cpu: {{ virt_controller_requests_cpu }}
            memory: {{ virt_controller_requests_memory }}
        volumeMounts:
        - mountPath: {{ inventory_volume_path }}
          name: inventory
        - mountPath: /var/run/secrets/inventory-tls
          name: inventory-tls
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-secret
      - name: inventory-tls
        secret:
          defaultMode: 420
          secretName: inventory-tls
      - name: inventory
        emptyDir: {}
